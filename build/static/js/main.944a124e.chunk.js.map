{"version":3,"sources":["store/actions/task.action.js","assets/img/nP5HPw4.jpeg","components/landing/Login.js","components/landing/Register.js","components/landing/LandingPage.js","assets/img/pixel-art-bitcoin-gold-coin.png","components/lib/Navigation.js","components/dashboard/AddTask.js","lib/checks.js","components/dashboard/Task.js","components/dashboard/TaskView.js","components/dashboard/SubBoard.js","components/dashboard/Taskboard.js","components/dashboard/DailiesBar.js","components/dashboard/RemoveDoneTaskButton.js","components/dashboard/Dashboard.js","components/garden/Garden.js","assets/img/florist HD.jpg","components/florist/Florist.js","components/admin/AdminPage.js","App.js","reportWebVitals.js","store/reducers/task.reducer.js","index.js"],"names":["setTaskList","tasks","type","payload","archiveTask","id","setDailies","dailies","updateCoins","coins","Login","setAuth","setAdmin","show","setShow","useState","cred","setCred","history","useHistory","a","axios","post","data","localStorage","setItem","token","user","isAdmin","push","console","log","handleChange","e","prevState","target","name","value","Modal","className","onHide","centered","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","placeholder","onChange","Button","variant","onClick","block","Register","LandingPage","auth","setUser","loginShow","setLoginShow","registerShow","setRegisterShow","Image","src","forestImg","style","height","width","position","objectFit","objectPosition","top","left","zIndex","fluid","Row","Col","Container","lg","backgroundColor","borderRadius","border","Navigation","admin","logout","Navbar","expand","Brand","to","fontSize","textShadow","Toggle","aria-controls","Collapse","Nav","Item","coinImg","color","boxShadow","AddTask","addTaskShow","setAddTaskShow","getTasks","dateBy","Date","newTaskForm","setNewTaskForm","assignablePlants","setAssignablePlants","selectedPlant","setSelectedPlant","startDate","setStartDate","endDate","setEndDate","IU","IN","UU","UN","selected","setSelected","handleClose","handleQuadrantClick","attributes","isImportant","isUrgent","dateStart","plantAssigned","headers","authorization","useEffect","get","plants","getAssignablePlants","date","selectsStart","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","selectsEnd","minDate","as","rows","length","map","el","i","Check","inline","_id","label","isAuth","response","message","Task","task","handleEditTask","showTask","setShowTask","done","setDone","dispatch","useDispatch","delete","removeTaskFromScreen","status","Toast","onClose","stopPropagation","textDecoration","changeStatus","checked","size","deleteTaskFromDB","TaskView","clickedTask","setClickedTask","editTaskShow","setEditTaskShow","parseJSON","matrixName","category","description","htmlFor","RenderTasks","useSelector","state","undefined","isArchived","md","SubBoard","title","Taskboard","titleArray","subBoardBorder","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","colorMatrix","importantUrgentMatrix","RenderButton","changeStateOfDaily","buttonState","DailiesBar","daily","setButtonState","newCoins","RemoveDoneTaskButton","tasksToArchive","filter","setTaskIsArchived","taskId","toString","Dashboard","dailyRes","then","suc","catch","err","getDailies","idx","Garden","props","plantSlots","inventory","setInventory","garden","setGarden","headerStyle","selectedStyle","deselectedStyle","plantStyle","getInventory","getGarden","index","slots","createSlots","Accordion","defaultActiveKey","Card","eventKey","maxHeight","overflow","images","currentLevel","alt","insertPlant","OverlayTrigger","overlay","Tooltip","ProgressBar","now","currentGrowth","Math","round","maxGrowth","max","placement","Florist","floristPlants","setFloristPlants","showInsufficientCoin","setShowInsufficientCoin","cardStyle","maxWidth","buyBtnStyle","buyPlant","plant","find","price","newCoinsValue","getFloristPlants","floristImg","xs","backdrop","keyboard","AdminPage","image","setImage","url","setUrl","newPlant","setNewPlant","newDailies","setNewDailies","handleChangeDailies","files","FormData","append","createCloudinaryFormData","isFileUploaded","fetch","method","body","resp","json","uploadToCloudinary","PrivateRouter","Component","path","location","rest","exact","pathname","from","App","removeItem","getUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","Number","store","createStore","action","taskList","findIndex","afterDeleteLIst","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.944a124e.chunk.js","sourcesContent":["\r\nexport function setTaskList(tasks){\r\n    return {\r\n                type: \"GET_TASKS\",\r\n                payload: tasks\r\n    }\r\n}\r\n\r\nexport function archiveTask(id) {\r\n    return {\r\n        type: \"ARCHIVE_TASK\",\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport function removeTask(id){\r\n    return{\r\n        type: \"DELETE_TASK\",\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport function setDailies(dailies){\r\n    return{\r\n        type: \"SET_DAILIES\",\r\n        payload: dailies\r\n    }\r\n}\r\n\r\nexport function updateCoins(coins){\r\n    return{\r\n        type: \"UPDATE_COINS\",\r\n        payload: coins\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/nP5HPw4.4d2f2cb7.jpeg\";","import React, {useState} from 'react';\nimport {Modal, Button, Form} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport {useHistory} from \"react-router-dom\"\n\nfunction Login({setAuth, setAdmin, show, setShow}) {\n    // Modal Open/Close State\n    const handleClose = () => setShow(false);\n\n    // Auth State\n    const [cred, setCred] = useState({})\n    let history = useHistory()\n\n    async function submit() {\n        try {\n            let {data} = await axios.post(\"/api/login\", cred)\n            localStorage.setItem(\"token\", data.token)\n            if(data.user.isAdmin) setAdmin(true)\n            setAuth(true)\n            setShow(false)\n            history.push(\"/dashboard\")\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    // Form Change\n    function handleChange(e) {\n        setCred(prevState => ({...prevState, [e.target.name] : e.target.value }))\n    }\n\n    return (\n            <Modal className=\"\" show={show} onHide={handleClose} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Log In</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={handleChange} />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange}/>\n                        </Form.Group>\n\n                        <Button variant=\"primary\" onClick={submit} block>\n                            Log In\n                        </Button>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n    );\n}\n\nexport default Login;\n","import React, {useState} from 'react';\nimport {Modal, Button, Form} from \"react-bootstrap\";\nimport {useHistory} from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction Register({show, setShow, setAuth}) {\n    const handleClose = () => setShow(false);\n    const [cred, setCred] = useState({})\n    let history = useHistory()\n\n    async function submit() {\n        try {\n            let {data: {token}} = await axios.post(\"/api/register\", cred)\n            localStorage.setItem(\"token\", token)\n            setAuth(true)\n            setShow(false)\n            history.push(\"/dashboard\")\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function handleChange(e) {\n        setCred(prevState => ({...prevState, [e.target.name] : e.target.value }))\n    }\n\n    return (\n        <Modal show={show} onHide={handleClose} centered>\n            <Modal.Header closeButton>\n                <Modal.Title>Register</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={handleChange}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control name=\"username\" type=\"text\" placeholder=\"Enter Username\" onChange={handleChange}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control name=\"passwordConfirmation\" type=\"password\" placeholder=\"Password\" onChange={handleChange}/>\n                    </Form.Group>\n                    <Button variant=\"primary\" onClick={submit}>\n                        Register\n                    </Button>\n                </Form>\n            </Modal.Body>\n        </Modal>\n    );\n}\n\nexport default Register;\n","import React, {useState} from 'react';\nimport {Button, Col, Container, Image, Row} from \"react-bootstrap\";\nimport forestImg from \"../../assets/img/nP5HPw4.jpeg\"\nimport Login from \"./Login\";\nimport Register from \"./Register\";\n\nfunction LandingPage({auth, setAuth, setAdmin, setUser}) {\n    const [loginShow, setLoginShow] = useState(false);\n    const [registerShow, setRegisterShow] = useState(false);\n    const handleLoginShow = () => setLoginShow(true);\n    const handleRegisterShow = () => setRegisterShow(true);\n\n    const bgImgStyle = {\n\n        height: \"100vh\",\n        width: \"100%\",\n        position: \"absolute\",\n        objectFit: \"cover\",\n        objectPosition: \"center\",\n        top: \"56px\",\n        left: \"0\",\n        zIndex: -1\n    }\n\n    const loginStyle = {\n        backgroundColor: \"rgba(81, 163, 136,0.7)\",\n        top: \"30%\",\n        borderRadius: \"25px\",\n        border: \"solid rgba(24,71,57, 1)\"\n    }\n\n\n    return (\n        <div>\n            <Image src={forestImg} style={bgImgStyle} fluid id=\"landingForest\"/>\n            <Row className=\"flex-grow-1\">\n                <Col className=\"bg-dark align-content-center\">\n                    <Container>\n                        <Col className=\"text-white h1\">\n                            Task Garden\n                        </Col>\n                    </Container>\n                </Col>\n            </Row>\n                <div style={{height: \"100vh\"}} className={\"d-flex flex-column justify-content-around\"}>\n\n                    <Row className={\"d-flex justify-content-center\"}>\n                        <Col lg={6} >\n                        <Container style={loginStyle} className={\"p-3\"}>\n                                <Row className={\"justify-content-center mb-3\"}>\n                                    Have an Account? Sign in!\n                                </Row>\n                                <Row className=\"justify-content-center\">\n                                    <Button variant=\"primary\" className=\"landingButton\" onClick={handleLoginShow}>\n                                        Sign in\n                                    </Button>\n                                </Row>\n                                <Row className=\"justify-content-center mb-3 mt-3\">\n                                    If not, register here!\n\n                                </Row>\n                                <Row className=\"justify-content-center\">\n                                    <Button variant=\"primary\" className=\"landingButton\" onClick={handleRegisterShow}>\n                                        Register\n                                    </Button>\n                                </Row>\n                        </Container>\n                        </Col>\n                    </Row>\n\n                    <Row></Row>\n                    <Row></Row>\n                </div>\n\n            <Login show={loginShow} setShow={setLoginShow} setAuth={setAuth} setAdmin={setAdmin}/>\n            <Register show={registerShow} setShow={setRegisterShow} setAuth={setAuth}/>\n        </div>\n\n    );\n}\n\nexport default LandingPage;\n","export default __webpack_public_path__ + \"static/media/pixel-art-bitcoin-gold-coin.a640bf77.png\";","import React from 'react';\nimport {Navbar, Nav, Button, Image} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport coinImg from \"../../assets/img/pixel-art-bitcoin-gold-coin.png\"\n\nfunction Navigation({admin, logout, user, coins}) {\n\n    const logoutButtonStyle = {\n        backgroundColor: \"rgba(58, 70, 93, 1)\",\n        color: \"white\",\n        boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"5px\",\n        border: \"none\"\n    }\n\n    return (\n        <Navbar expand=\"lg\" id=\"navbar\" className=\"p-0\" style={{backgroundColor: \"rgba(81, 163, 136, 1)\"}}>\n            <Navbar.Brand id=\"navbarBrand\" style={{backgroundColor: \"rgba(196, 196, 196, 0.3)\"}}>\n                <NavLink to=\"/\" style={{fontSize: \"2.5rem\", textShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\"}} className=\"py-0 px-5 nav-link text-white\">Task Garden</NavLink>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className=\"ml-5\"/>\n            <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\n                <Nav className=\"mx-4 align-items-center\" style={{textShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\"}}>\n                    {!admin &&\n                        <>\n                            <Nav.Item className=\"nav-link text-white\">\n                            <Image style={{width: \"25px\", height: \"25px\"}} src={coinImg} className=\"mr-1\" />\n                            {user ? coins : 0}\n                            </Nav.Item>\n                            <NavLink to=\"/dashboard\" className=\"nav-link text-white\">Dashboard</NavLink>\n                            <NavLink to=\"/garden\" className=\"nav-link text-white\">Garden</NavLink>\n                            <NavLink to=\"/florist\" className=\"nav-link text-white\">Florist</NavLink>\n                        </>\n                    }\n                    <Button style={logoutButtonStyle} onClick={logout}>Logout</Button>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Navigation;\n","import React, {useEffect, useState} from 'react';\nimport {Button, Modal, Form, Row, Container, Col} from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\n\nfunction AddTask({addTaskShow, setAddTaskShow, getTasks}) {\n    const [newTaskForm, setNewTaskForm] = useState({dateBy: new Date()}) // Form State\n    const [assignablePlants, setAssignablePlants] = useState([])\n    const [selectedPlant, setSelectedPlant] = useState()\n    // Datepicker\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n    const [selected, setSelected] = useState({IU: \"none\", IN: \"none\", UU: \"none\", UN: \"none\"})\n\n    useEffect(() => {\n        async function getAssignablePlants() {\n            let {data: {assignablePlants}} = await axios.get(\"/api/tasks/assignable\", {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n            setAssignablePlants(assignablePlants != null && assignablePlants.plants)\n        }\n        getAssignablePlants()\n    },[])\n\n    // Add Task Modal\n    function handleClose() { // Function to close Modal\n        setAddTaskShow(false);\n        setSelected({IU: \"none\", IN: \"none\", UU: \"none\", UN: \"none\"})\n    }\n\n    // Form change\n    function handleChange(e) {\n        setNewTaskForm(prevState => ({...prevState, [e.target.name] : e.target.value }))\n    }\n\n    // Handles Matrix selector click\n    function handleQuadrantClick(e, value) {\n        if(selected[e.target.attributes.name.value] === \"none\") {\n            setSelected({IU: \"none\", IN: \"none\", UU: \"none\", UN: \"none\"})\n            setSelected(prevState => ({...prevState, [e.target.attributes.name.value]: \"3px solid yellow\" }))\n            setNewTaskForm(prevState => ({...prevState, isImportant: value.isImportant, isUrgent: value.isUrgent}))\n        }\n        else {\n            setSelected(prevState => ({...prevState, [e.target.attributes.name.value]: \"none\"}))\n            setNewTaskForm(prevState => ({...prevState, isImportant: false, isUrgent: false}))\n        }\n    }\n\n    async function submit() {\n        try {\n            await axios.post(\"/api/tasks/create\", {...newTaskForm, dateStart: startDate, dateBy: endDate, plantAssigned: selectedPlant}, {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n            handleClose()\n            getTasks()\n        } catch (e) {\n            console.log(e)\n        }\n        setNewTaskForm(prevState => ({...prevState, isImportant: false, isUrgent: false}))\n    }\n\n    return (\n        <Modal show={addTaskShow} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Add New Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body >\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Task Title</Form.Label>\n                        <Form.Control name=\"name\" type=\"text\" placeholder=\"Task Title\" onChange={handleChange}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Category</Form.Label>\n                        <Form.Control name=\"category\" type=\"text\" placeholder=\"Category\" onChange={handleChange}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Start Date</Form.Label>\n                            <DatePicker\n                                selected={startDate}\n                                onChange={(date) => setStartDate(date)}\n                                selectsStart\n                                startDate={startDate}\n                                endDate={endDate}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                timeIntervals={15}\n                                timeCaption=\"Time\"\n                                dateFormat=\"d MMM yyyy, h:mm aa\"\n                            />\n                        <br/>\n                            <Form.Label>Completed By</Form.Label>\n                            <DatePicker\n                                selected={endDate}\n                                onChange={(date) => setEndDate(date)}\n                                selectsEnd\n                                startDate={startDate}\n                                endDate={endDate}\n                                minDate={startDate}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                timeIntervals={15}\n                                timeCaption=\"Time\"\n                                dateFormat=\"d MMM yyyy, h:mm aa\"\n                            />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control name=\"description\" as=\"textarea\" rows={3} placeholder=\"Enter a description\" onChange={handleChange}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                    <Form.Label>Select Plant</Form.Label>\n                        <div key=\"inline-radio\" className=\"mb-3\">\n                        {assignablePlants.length > 0 && assignablePlants.map((el, i) => (\n                            <Form.Check inline\n                                        value={el._id}\n                                       label={el.name}\n                                       name={el.name}\n                                        onClick={(e) => setSelectedPlant(e.target.value)}\n                                       type=\"radio\" />\n                        ))}\n                        </div>\n                    </Form.Group>\n\n                    <Container>\n                        <Row>\n                            <Col style={{\n                                backgroundColor: \"rgba(231, 85, 85,1)\",\n                                border: `${selected.IU}`\n                            }}\n                                 name=\"IU\"\n                                 onClick={(e) => handleQuadrantClick(e, {isImportant: true, isUrgent: true})}>\n                                Important Urgent\n                            </Col>\n                            <Col style={{backgroundColor: \"rgba(224, 159, 159)\",\n                                border: `${selected.IN}`\n                            }}\n                                 name=\"IN\"\n                                 onClick={(e) => handleQuadrantClick(e, {isImportant: true, isUrgent: false})}>\n                                Important Not-Urgent\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col style={{backgroundColor: \"rgba(241, 181, 121,1)\",\n                                border: `${selected.UU}`\n                            }}\n                                 name=\"UU\"\n                                 onClick={(e) => handleQuadrantClick(e, {isImportant: false, isUrgent: true})}>\n                                Unimportant Urgent\n                        </Col>\n                            <Col style={{backgroundColor: \"rgba(54, 150, 148,1)\",\n                                border: `${selected.UN}`\n                            }}\n                                 name=\"UN\"\n                                 onClick={(e) => handleQuadrantClick(e, {isImportant: false, isUrgent: false})}>\n                                Unimportant Not-Urgent\n                        </Col>\n                    </Row>\n                    </Container>\n                    <br/>\n\n                    <Button variant=\"primary\" onClick={submit}>\n                        Submit\n                    </Button>\n                </Form>\n            </Modal.Body>\n        </Modal>\n    );\n}\n\nexport default AddTask;\n","import axios from \"axios\";\r\n\r\nexport async function isAuth(){\r\n    try{\r\n        await axios.get('/api/check', {\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.token}`\r\n            }\r\n        })\r\n        return true\r\n    }catch(e){\r\n        console.log(e.response)\r\n        return false\r\n    }\r\n}\r\n\r\nexport async function getUser(){\r\n    try{\r\n        let user = await axios.get('/api/user',{\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.token}`\r\n            }\r\n        })\r\n        return user.data\r\n    }catch(e){\r\n        return {message: \"Failed to get user\"}\r\n    }\r\n}\r\n\r\nexport async function setUserStats(setAuth, setUser, setAdmin) {\r\n    try {\r\n        let {data} = await axios.get(\"/api/user\", {\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.token}`\r\n            }\r\n        })\r\n        setAuth(true)\r\n        if(data.user.isAdmin) setAdmin(true)\r\n        setUser(data.user)\r\n    } catch (e) {\r\n        setAdmin(false)\r\n        setAuth(false)\r\n        setUser(null)\r\n        await axios.delete(\"/api/logout\", {\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.token}`\r\n            }\r\n        })\r\n        localStorage.removeItem(\"token\")\r\n    }\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Form, Toast} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {removeTask} from \"../../store/actions/task.action\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction Task({task, handleEditTask}) {\r\n    const [showTask, setShowTask] = useState(true)\r\n    const [done, setDone] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const strikethrough = {\r\n        textDecoration: \"line-through\"\r\n    }\r\n\r\n    let deleteBtnStyle = {\r\n        border: \"rgba(68,9,9, 1)\",\r\n        backgroundColor: \"rgb(208,30,30)\",\r\n        borderRadius: \"10px\",\r\n        boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.25)\",\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (task.status === \"Completed\") {\r\n            setDone(true)\r\n        }else{\r\n            setDone(false)\r\n        }\r\n    },[])\r\n\r\n    function deleteTask(e){\r\n        e.stopPropagation()\r\n        removeTaskFromScreen();\r\n        deleteTaskFromDB()\r\n    }\r\n    async function deleteTaskFromDB(){\r\n        await axios.delete(`/api/tasks/delete/${task._id}`,{\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.token}`\r\n            }\r\n        })\r\n    }\r\n    function removeTaskFromScreen() {\r\n        setShowTask(false)\r\n        dispatch(removeTask(task._id))\r\n    }\r\n\r\n    function closeToast(e){\r\n        e.stopPropagation()\r\n        removeTaskFromScreen();\r\n    }\r\n\r\n    function handleDone(e){\r\n        //setDone(!done)\r\n        changeStatus()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    async function changeStatus(){\r\n        try{\r\n            let statusRes = await axios.get(`/api/tasks/done/${task._id}`, {\r\n                headers: {\r\n                    authorization: `Bearer ${localStorage.token}`\r\n                }\r\n            })\r\n            if (statusRes.data.payload === \"Completed\"){\r\n                setDone(true)\r\n            }else{\r\n                setDone(false)\r\n            }\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n            <Toast show={showTask} onClose={closeToast} >\r\n                <Toast.Header closeButton={false}>\r\n                    <strong style={done?{textDecoration: \"line-through\"}:{textDecoration: \"none\"}}\r\n                            onClick={e=>handleEditTask(e,task)}\r\n                            className={`mr-auto`}>\r\n                        {task.name}\r\n                    </strong>\r\n                    <Form.Check className={\"mr-1\"} type={\"checkbox\"} onChange={handleDone} checked={done}/>\r\n                    <Button variant={\"danger\"} size={\"sm\"} style={deleteBtnStyle} onClick={deleteTask}\r\n                            className={\"d-flex align-items-center justify-content-center\"}>\r\n                        X\r\n                    </Button>\r\n                </Toast.Header>\r\n\r\n                {/*<Toast.Body>{task.category}</Toast.Body>*/}\r\n            </Toast>\r\n    );\r\n}\r\n\r\nexport default Task;\r\n","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Container, Form, Modal, Row} from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport {parseJSON} from \"date-fns\";\nimport axios from \"axios\";\n\nfunction TaskView({clickedTask, setClickedTask, editTaskShow, setEditTaskShow, getTasks}) {\n    const [startDate, setStartDate] = useState();\n    const [endDate, setEndDate] = useState();\n    const [selected, setSelected] = useState({IU: \"none\", IN: \"none\", UU: \"none\", UN: \"none\"})\n\n    useEffect(() => {\n        if(clickedTask.dateStart && clickedTask.dateBy) {\n            setStartDate(parseJSON(clickedTask.dateStart))\n            setEndDate(parseJSON(clickedTask.dateBy))\n        }\n        if(clickedTask) {\n            setSelected({IU: \"none\", IN: \"none\", UU: \"none\", UN: \"none\"})\n            let matrixName = \"\"\n\n            if(clickedTask.isImportant) matrixName += \"I\"\n            else matrixName += \"U\"\n\n            if(clickedTask.isUrgent) matrixName += \"U\"\n            else matrixName += \"N\"\n\n            setSelected(prevState => ({...prevState, [matrixName]: \"3px solid yellow\" }))\n        }\n    },[editTaskShow])\n\n\n    // Modal Close\n    function handleClose() {\n        setEditTaskShow(false)\n    }\n\n    // Form Change\n    function handleChange(e) {\n        setClickedTask(prevState => ({...prevState, [e.target.name]: e.target.value}))\n    }\n\n    // Matrix selector\n    function handleQuadrantClick(e, value) {\n        if(selected[e.target.attributes.name.value] === \"none\") {\n            setSelected({IU: \"none\", IN: \"none\", UU: \"none\", UN: \"none\"})\n            setSelected(prevState => ({...prevState, [e.target.attributes.name.value]: \"3px solid yellow\" }))\n            setClickedTask(prevState => ({...prevState, isImportant: value.isImportant, isUrgent: value.isUrgent}))\n        }\n        else {\n            setSelected(prevState => ({...prevState, [e.target.attributes.name.value]: \"none\"}))\n            setClickedTask(prevState => ({...prevState, isImportant: false, isUrgent: false}))\n        }\n    }\n\n    // Save Changes\n    async function saveForm() {\n\n        try {\n          await axios.post(`/api/tasks/edit/${clickedTask._id}`, {...clickedTask, dateStart: startDate, dateBy: endDate} , {\n              headers: {\n                  authorization: `Bearer ${localStorage.token}`\n              }\n          })\n            handleClose()\n            getTasks()\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n    return (\n        <>\n            {clickedTask &&\n            <Modal show={editTaskShow} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Task</Modal.Title>\n                </Modal.Header>\n                <Modal.Body >\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Task Title</Form.Label>\n                            <Form.Control name=\"name\" type=\"text\" placeholder=\"Task Title\" value={clickedTask.name} onChange={handleChange}/>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control name=\"category\" type=\"text\" placeholder=\"Category\" value={clickedTask.category} onChange={handleChange}/>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Start Date</Form.Label>\n                            <DatePicker\n                                selected={startDate}\n                                onChange={(date) => setStartDate(date)}\n                                selectsStart\n                                startDate={startDate}\n                                endDate={endDate}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                timeIntervals={15}\n                                timeCaption=\"Time\"\n                                dateFormat=\"d MMM yyyy, h:mm aa\"\n                            />\n                            <br/>\n                            <Form.Label>Completed By</Form.Label>\n                            <DatePicker\n                                selected={endDate}\n                                onChange={(date) => setEndDate(date)}\n                                selectsEnd\n                                startDate={startDate}\n                                endDate={endDate}\n                                minDate={startDate}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                timeIntervals={15}\n                                timeCaption=\"Time\"\n                                dateFormat=\"d MMM yyyy, h:mm aa\"\n                            />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control name=\"description\" as=\"textarea\" rows={3} placeholder=\"Enter a description\" value={clickedTask.description} onChange={handleChange}/>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label htmlFor=\"disabledSelect\">Selected Plant: {clickedTask.plantAssigned && clickedTask.plantAssigned.name}</Form.Label>\n                        </Form.Group>\n\n                        <Container>\n                            <Row>\n                                <Col style={{\n                                    backgroundColor: \"rgba(231, 85, 85,1)\",\n                                    border: `${selected.IU}`\n                                }}\n                                     name=\"IU\"\n                                     onClick={(e) => handleQuadrantClick(e, {isImportant: true, isUrgent: true})}>\n                                    Important Urgent\n                                </Col>\n                                <Col style={{backgroundColor: \"rgba(224, 159, 159)\",\n                                    border: `${selected.IN}`\n                                }}\n                                     name=\"IN\"\n                                     onClick={(e) => handleQuadrantClick(e, {isImportant: true, isUrgent: false})}>\n                                    Important Not-Urgent\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col style={{backgroundColor: \"rgba(241, 181, 121,1)\",\n                                    border: `${selected.UU}`\n                                }}\n                                     name=\"UU\"\n                                     onClick={(e) => handleQuadrantClick(e, {isImportant: false, isUrgent: true})}>\n                                    Unimportant Urgent\n                                </Col>\n                                <Col style={{backgroundColor: \"rgba(54, 150, 148,1)\",\n                                    border: `${selected.UN}`\n                                }}\n                                     name=\"UN\"\n                                     onClick={(e) => handleQuadrantClick(e, {isImportant: false, isUrgent: false})}>\n                                    Unimportant Not-Urgent\n                                </Col>\n                            </Row>\n                        </Container>\n                        <br/>\n\n                        <Button variant=\"primary\" onClick={saveForm}>\n                            Submit\n                        </Button>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n            }\n        </>\n    );\n}\n\nexport default TaskView;\n","import React, {useEffect, useState} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Task from \"./Task\";\r\nimport TaskView from \"./TaskView\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nfunction SubBoard({getTasks, isImportant, isUrgent, color, title, border}) {\r\n    // CSS\r\n    const style = {\r\n        ...color,\r\n        height: \"35vh\",\r\n        boxShadow: \"10px 10px 4px 0 rgba(0, 0, 0, 0.25)\",\r\n        ...border\r\n    }\r\n    const titleStyle = {\r\n        backgroundColor: \"rgba(65, 90, 95, 0.25)\",\r\n        color: \"white\",\r\n        borderRadius: \"10px\",\r\n        boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.25)\"\r\n    }\r\n\r\n    // Edit Task Modal\r\n    const [editTaskShow, setEditTaskShow] = useState(false);\r\n\r\n    // Clicked task state\r\n    const [clickedTask, setClickedTask] = useState({})\r\n\r\n    let tasks = useSelector(state => state.tasks)\r\n\r\n\r\n    function handleEditTask(e, task) {\r\n        setEditTaskShow(true)\r\n        setClickedTask(task)\r\n    }\r\n    return (\r\n        <Container style={style}>\r\n            <Row className=\"mx-auto\" style={{height: \"15%\"}}>\r\n                <Col md={5}></Col>\r\n                <Col md={2} style={titleStyle} className=\"px-0 py-1 my-auto\">\r\n                    {title}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mt-3\">\r\n                <RenderTasks tasks={tasks} isImportant={isImportant} isUrgent={isUrgent} handleEditTask={handleEditTask}/>\r\n            </Row>\r\n            <TaskView editTaskShow={editTaskShow}\r\n                      setEditTaskShow={setEditTaskShow}\r\n                      clickedTask={clickedTask}\r\n                      setClickedTask={setClickedTask}\r\n                      getTasks={getTasks}/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nfunction RenderTasks({isImportant, isUrgent, handleEditTask}){\r\n    //onClick={(e) => handleEditTask(e, task)}\r\n\r\n    let tasks = useSelector(state => state.tasks)\r\n\r\n    useEffect(()=>{\r\n\r\n    },[tasks])\r\n\r\n    if (tasks === undefined){\r\n        return(\r\n            <>\r\n                Error unable to get Tasks...\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (tasks.length >= 0){\r\n        return(\r\n            <>\r\n                {tasks.map(task => {\r\n                    return (\r\n                            ((task.isImportant === isImportant) && (task.isUrgent === isUrgent) && (task.isArchived === false)) &&\r\n                            <Col lg={6} md={12} key={task._id}>\r\n                                <Task task={task} handleEditTask={handleEditTask}/>\r\n                            </Col>\r\n                        )\r\n                    }\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default SubBoard;\r\n","import React from 'react';\r\nimport SubBoard from \"./SubBoard\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\nfunction Taskboard({tasks, getTasks}) {\r\n\r\n    const titleArray = [\"Do\", \"Decide\", \"Delegate\", \"Drop\"]\r\n    const subBoardBorder = [\r\n        {borderTopLeftRadius: \"15px\"},\r\n        {borderTopRightRadius: \"15px\"},\r\n        {borderBottomLeftRadius: \"15px\"},\r\n        {borderBottomRightRadius: \"15px\"}\r\n    ]\r\n    const colorMatrix = {\r\n        color: [\r\n            {backgroundColor: \"rgba(231, 85, 85,1)\"},\r\n            {backgroundColor: \"rgba(224, 159, 159)\"},\r\n            {backgroundColor: \"rgba(241, 181, 121,1)\"},\r\n            {backgroundColor: \"rgba(54, 150, 148,1)\"}\r\n        ]\r\n    }\r\n    const importantUrgentMatrix = {\r\n        isImportant: [true,true,false,false],\r\n        isUrgent: [true,false,true,false]\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col md={6} className={`px-0`}>\r\n                    <SubBoard tasks={tasks}\r\n                              getTasks={getTasks}\r\n                              isImportant={importantUrgentMatrix.isImportant[0]}\r\n                              isUrgent={importantUrgentMatrix.isUrgent[0]}\r\n                              color={colorMatrix.color[0]}\r\n                              title={titleArray[0]}\r\n                              border={subBoardBorder[0]}/>\r\n                </Col>\r\n                <Col md={6} className={`px-0`}>\r\n                    <SubBoard tasks={tasks}\r\n                              getTasks={getTasks}\r\n                              isImportant={importantUrgentMatrix.isImportant[1]}\r\n                              isUrgent={importantUrgentMatrix.isUrgent[1]}\r\n                              color={colorMatrix.color[1]}\r\n                              title={titleArray[1]}\r\n                              border={subBoardBorder[1]}/>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row>\r\n                <Col md={6} className={`px-0`}>\r\n                    <SubBoard tasks={tasks}\r\n                              getTasks={getTasks}\r\n                              isImportant={importantUrgentMatrix.isImportant[2]}\r\n                              isUrgent={importantUrgentMatrix.isUrgent[2]}\r\n                              color={colorMatrix.color[2]}\r\n                              title={titleArray[2]}\r\n                              border={subBoardBorder[2]}/>\r\n                </Col>\r\n                <Col md={6} className={`px-0`}>\r\n                    <SubBoard tasks={tasks}\r\n                              getTasks={getTasks}\r\n                              isImportant={importantUrgentMatrix.isImportant[3]}\r\n                              isUrgent={importantUrgentMatrix.isUrgent[3]}\r\n                              color={colorMatrix.color[3]}\r\n                              title={titleArray[3]}\r\n                              border={subBoardBorder[3]}/>\r\n                </Col>\r\n\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Taskboard;\r\n","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Container, Row} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateCoins} from \"../../store/actions/task.action\";\n\nfunction DailiesBar({daily}) {\n    let [buttonState, setButtonState] = useState(false)\n    let containerStyle = {\n        border: \"5px solid rgba(35, 108, 56, 1)\",\n        backgroundColor: \"white\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.25)\"\n    }\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        setButtonState(daily[\"isArchived\"])\n    },[])\n\n    async function changeStateOfDaily() {\n        let state = await axios.post(`/api/tasks/dailies/${daily._id}`, daily, {\n            headers: {\n                authorization: `Bearer ${localStorage.token}`\n            }\n        })\n        setButtonState(state.data.isArchived)\n\n        //update the store\n        dispatch(updateCoins(state.data.newCoins))\n    }\n\n\n\n    return (\n        <Container style={containerStyle} className=\"mt-3\" >\n            <Row className=\"align-items-center\">\n                <Col md={9}>\n                    Dailies\n                    <br/>\n                    {daily.name}\n                </Col>\n                <Col md={3}>\n                    <RenderButton changeStateOfDaily={changeStateOfDaily} buttonState={buttonState}/>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nfunction RenderButton({changeStateOfDaily, buttonState}){\n    let doneBtnStyle = {\n        border: \"3px solid rgba(50, 136, 29, 1)\",\n        backgroundColor: \"rgba(78, 201, 47, 1)\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.25)\"\n    }\n    let notDoneBtnStyle = {\n        border: \"3px solid rgba(68,9,9, 1)\",\n        backgroundColor: \"rgb(208,30,30)\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.25)\"\n    }\n    if(buttonState){\n        return(\n            <Button onClick={changeStateOfDaily} style={doneBtnStyle}>\n                \"Done\"\n            </Button>\n        )\n    }else{\n        return(\n            <Button onClick={changeStateOfDaily} style={notDoneBtnStyle}>\n                Not Done\n            </Button>\n        )\n    }\n}\n\nexport default DailiesBar;\n","import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {archiveTask} from \"../../store/actions/task.action\";\r\n\r\nfunction RemoveDoneTaskButton({getTasks}) {\r\n    let tasks = useSelector(state => state.tasks)\r\n    const dispatch = useDispatch()\r\n\r\n    async function archiveTasks(){\r\n        try{\r\n            let tasksToArchive = []\r\n            let tasks = await getTasks()\r\n\r\n            tasksToArchive = tasks.filter(el => {\r\n                return (el.status === \"Completed\")\r\n            })\r\n\r\n            for(let i = 0; i < tasksToArchive.length; i++){\r\n                let taskId = await setTaskIsArchived(tasksToArchive[i]._id)\r\n                dispatch(archiveTask(taskId))\r\n            }\r\n            getTasks()\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    async function setTaskIsArchived(id){\r\n        try{\r\n            let task = await axios.post(`/api/tasks/edit/${id}`, {isArchived: true} ,{\r\n                headers: {\r\n                    authorization: `Bearer ${localStorage.token}`\r\n                }\r\n            })\r\n\r\n            return task.data.payload._id.toString()\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant={\"success\"} onClick={archiveTasks}>\r\n                Archive Done Tasks\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RemoveDoneTaskButton;","import React, {useEffect, useState} from 'react';\nimport {Container, Row} from \"react-bootstrap\";\nimport AddTask from \"./AddTask\";\nimport axios from \"axios\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {setTaskList, setDailies} from \"../../store/actions/task.action\";\nimport {isAuth} from \"../../lib/checks\";\nimport Taskboard from \"./Taskboard\";\nimport DailiesBar from \"./DailiesBar\";\nimport RemoveDoneTaskButton from \"./RemoveDoneTaskButton\";\n\nfunction Dashboard({auth, setAuth}) {\n    // Add Task Modal\n    const [addTaskShow, setAddTaskShow] = useState(false); // Modal appearance state\n    const handleShow = () => setAddTaskShow(true); // Function to show Modal\n    const addTaskButtonStyle = {\n        width: \"50px\",\n        fontSize: \"2rem\",\n        color: \"white\",\n        backgroundColor: \"rgba(58, 70, 93, 1)\",\n        borderRadius: \"50%\",\n    }\n\n    let tasks = useSelector(state => state.tasks)\n    let dailies = useSelector(state => state.dailies)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        isAuth().then(suc => setAuth(suc)).catch(err => setAuth(err))\n        getTasks()\n        getDailies()\n\n    }, [])\n\n    async function getTasks() {\n        try {\n            let {data} = await axios.get(\"/api/tasks\", {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n            dispatch(setTaskList(data.tasks))\n            return data.tasks\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    async function getDailies() {\n        try {\n            let dailyRes = await axios.get(\"/api/tasks/dailies\", {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n            let dailies = dailyRes.data.dailies\n            dispatch(setDailies(dailies))\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n    return (\n        <>\n            {   dailies ?\n                dailies.map((el,idx)=>(\n                    <DailiesBar daily={el} key={idx} />\n                )) : <div>Loading...</div>\n            }\n            <Container>\n                <Row className={'d-flex justify-content-between align-items-center'}>\n                    <RemoveDoneTaskButton tasks={tasks} getTasks={getTasks}/>\n                    <Container className=\"mr-3 my-2\" style={addTaskButtonStyle} onClick={handleShow}>\n                        +\n                    </Container>\n                </Row>\n            </Container>\n\n            <AddTask addTaskShow={addTaskShow} setAddTaskShow={setAddTaskShow} getTasks={getTasks} />\n            <Container>\n                <Taskboard tasks={tasks} getTasks={getTasks}/>\n            </Container>\n        </>\n    );\n}\n\nexport default Dashboard;\n","import React, {useEffect, useState} from 'react';\nimport {\n    Accordion,\n    Card,\n    Col,\n    Container,\n    Button,\n    Row,\n    Image,\n    OverlayTrigger,\n    Tooltip,\n    ProgressBar\n} from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction Garden(props) {\n    // Number of slots in garden\n    const PLANTSLOTSNUMBER = 9\n    let plantSlots = []\n\n    const [inventory, setInventory] = useState([])\n    const [selected, setSelected] = useState(\"\")\n    const [garden, setGarden] = useState([])\n\n    const inventoryStyle = {\n        maxHeight: \"80vh\",\n        overflow: \"overlay\",\n        backgroundColor: \"rgba(255, 249, 235,0.7)\" ,\n    }\n    const headerStyle = {\n        backgroundColor: \"rgba(234,228,214, 1)\",\n        border: 0,\n        fontSize: \"25pt\",\n    }\n    const selectedStyle = {\n        border: \"3px solid\",\n        borderRadius: \"25px\",\n        backgroundColor: \"rgba(173, 170, 162)\",\n\n    }\n    const deselectedStyle = {\n        backgroundColor: \"rgba(255, 249, 235,1)\",\n    }\n    const gardenStyle = {\n        height: \"89vh\",\n        backgroundColor: \"green\"\n    }\n    const plantStyle = {\n        backgroundColor: \"rgb(255, 255, 255, 0.3)\",\n        borderRadius: \"10px\",\n        height: \"100%\",\n        width: \"100%\"\n    }\n\n    useEffect(() => {\n        getInventory()\n        getGarden()\n    },[])\n\n    async function getInventory() {\n        let {data: {plants}} = await axios.get(\"/api/garden/inventory\", {\n            headers: {\n                authorization: `Bearer ${localStorage.token}`\n            }\n        })\n        setInventory(plants)\n    }\n\n    async function getGarden() {\n        let {data: {garden}} = await axios.get(\"/api/garden/\", {\n            headers: {\n                authorization: `Bearer ${localStorage.token}`\n            }\n        })\n        setGarden(garden.plants)\n    }\n\n    function selectPlants(id) {\n        setSelected(\"\")\n        if(selected !== id) setSelected(id)\n    }\n\n    // Loop to push PLANTSLOTSNUMBER * elements into plantSlots\n    function createSlots(slots) {\n        for (let i = 0; i < slots; i++) {\n            plantSlots.push({})\n        }\n    } createSlots(PLANTSLOTSNUMBER)\n\n    async function insertPlant(index){\n        if(selected && !garden[index]) {\n            let {data} = await axios.post(`/api/garden/inventory/${selected}`, {index}, {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n            getInventory()\n            getGarden()\n        }\n        setSelected(\"\")\n    }\n    //border: `3px solid ${(selected === el._id) ? 'yellow' : \"rgba(255, 249, 235,1)\"}\n    return (\n        <Container className=\"my-5\">\n            <Row>\n                <Col md={3}>\n        <Accordion defaultActiveKey=\"0\">\n            <Card>\n                <Accordion.Toggle as={Button} eventKey=\"0\"  style={headerStyle} className={\"\"}>\n                    <Card.Header style={headerStyle} className={\"btn-change6 text-black-50\"}>\n                        Inventory\n                    </Card.Header>\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"0\" style={inventoryStyle}>\n                    <Card.Body>\n                        {inventory.length > 0 && inventory.map(el => (\n                        <Container key={el._id}\n                                   className=\"my-4\"\n                                   style={(selected === el._id) ? selectedStyle : deselectedStyle}>\n                            <Image src={el.images[el.currentLevel - 1]} alt={el.name} fluid onClick={() => selectPlants(el._id)} />\n                            {el.name}\n                        </Container>\n                        ))}\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        </Accordion>\n                </Col>\n                <Col md={9}>\n                    <Container style={gardenStyle}>\n                        <Row style={{height: \"100%\"}}>\n                            {plantSlots.map((el,i) =>\n                            <Col key={i} md={4} className=\"my-3\">\n                                <Container style={plantStyle} onClick={() => insertPlant(i)}>\n                                    {\n                                        ((garden) && (garden.length > 0) && (garden[i] != null) )&&\n                                        <OverlayTrigger overlay={\n                                            <Tooltip>\n                                                {garden[i].name}\n                                                <ProgressBar now={garden[i].currentGrowth} label={`${Math.round(garden[i].currentGrowth/garden[i].maxGrowth*100)}%`} max={garden[i].maxGrowth} />\n                                            </Tooltip>\n                                        } placement={'top'}>\n                                            <Image src={garden[i].images[garden[i].currentLevel - 1]} alt={garden[i].name} fluid/>\n                                        </OverlayTrigger>\n                                    }\n                                </Container>\n                            </Col>\n                            )}\n                        </Row>\n                    </Container>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Garden;\n","export default __webpack_public_path__ + \"static/media/florist HD.baab64be.jpg\";","import React, {useEffect, useState} from 'react';\nimport floristImg from '../../assets/img/florist HD.jpg'\nimport {Col, Image, Card, Container, Row, Button, Modal} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport {isAuth} from \"../../lib/checks\";\nimport coinImg from \"../../assets/img/pixel-art-bitcoin-gold-coin.png\"\nimport {useDispatch} from \"react-redux\";\nimport {updateCoins} from \"../../store/actions/task.action\";\n\n\nfunction Florist({user, auth, setAuth, admin, coins}) {\n    const [floristPlants, setFloristPlants] = useState([])\n    const [showInsufficientCoin, setShowInsufficientCoin] = useState(false);\n\n    const handleClose = () => setShowInsufficientCoin(false);\n\n    const dispatch = useDispatch()\n\n    const cardStyle = {\n        backgroundColor: \"rgba(255, 249, 235,1)\",\n\n        borderRadius: \"25px\",\n    }\n    const plantStyle = {\n        objectPosition: \"center\",\n        width: \"100%\",\n        maxWidth: \"330px\"\n        //height: \"110px\",\n    }\n    const buyBtnStyle = {\n        border: \"0\",\n        width: \"80%\",\n    }\n    const floristStyle = {\n        height: \"100vh\",\n        objectPosition: \"center\",\n        objectFit: \"cover\",\n    }\n\n    useEffect(()=>{\n        isAuth().then(suc => setAuth(suc)).catch(err => setAuth(err))\n        getFloristPlants()\n    },[])\n\n    //to get the plants from DB for the shop\n    async function getFloristPlants(){\n        try{\n            let floristPlants = await axios.get('/api/florist', {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }})\n            setFloristPlants(floristPlants.data.payload)\n        }catch(e){\n            console.log(e.response)\n        }\n    }\n\n    //when buy button is clicked\n    async function buyPlant(e){\n        try{\n            //finding the array of the plant clicked\n            let plant = floristPlants.find(({_id}) => _id == e.target.value)\n\n            //check if user have enough coins\n            if(plant.price > coins){\n                return setShowInsufficientCoin(true)\n            }\n\n            //send user, coins and plant to backend and get back a response of updated coins\n            let newCoinsValue = await axios.post('/api/florist/buy',{coins,plant},{\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }})\n\n            //updates the store\n            dispatch(updateCoins(newCoinsValue.data.newCoins))\n\n        }catch(e){\n            console.log(e.response)\n        }\n    }\n\n    return (\n        <div>\n            <Row>\n                <Col md={5} className={\"p-0\"}>\n                    <Image src={floristImg} style={floristStyle} fluid/>\n                </Col>\n                <Col md={7}>\n                    <Container >\n                        <Row className=\"g-4\">\n                            {floristPlants.length > 0 && floristPlants.map(plant => (\n                                <Col lg={4} xs={12} key={plant._id} className={\"d-flex justify-content-center\"}>\n                                    <Card style={cardStyle} className={\"mt-2 mb-2 p-2\"}>\n                                        <Row className={\"d-flex justify-content-center\"}>\n                                            <Image src={plant.images[1]} style={plantStyle} />\n                                        </Row>\n\n                                        <Card.Body className={\"d-flex flex-column justify-content-center align-items-center\"}>\n\n                                            <Card.Title>{plant.name}</Card.Title>\n                                            <Button onClick={buyPlant} value={plant._id} style={buyBtnStyle}\n                                                    className={\"text-black-50 d-flex justify-content-between btn-change\"}>\n                                                <Image style={{width: \"25px\", height: \"25px\"}} src={coinImg} />\n                                                {plant.price}\n                                            </Button>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            ))}\n                        </Row>\n                    </Container >\n                </Col>\n            </Row>\n\n            <Modal\n                show={showInsufficientCoin}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>u no moneh</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    You have insufficient coins for this purchase. Please do more dailies.\n                </Modal.Body>\n            </Modal>\n        </div>\n\n    );\n}\n\nexport default Florist;\n","import React, {useState} from 'react';\nimport {Button, Form, Container, Row, Col} from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction AdminPage(props) {\n    const [image, setImage] = useState(\"\")\n    const [url, setUrl] = useState(\"\")\n    const [newPlant, setNewPlant] = useState({})\n    const [newDailies, setNewDailies] = useState({})\n\n\n//for new plant\n//to upload the image onto the cloud\n    const uploadImage = () =>{\n        const data = createCloudinaryFormData();\n        if (isFileUploaded(data)){\n            uploadToCloudinary(data)\n        }\n    }\n\n    function createCloudinaryFormData() {\n        const data = new FormData()\n        data.append(\"file\", image)\n        data.append(\"upload_preset\", \"taskgarden\")\n        data.append(\"cloud_name\", \"seiproj3images\")\n        return data;\n    }\n\n    function isFileUploaded(data){\n        if (!data.get(\"file\")){\n            console.log(\"Please upload a file\")\n        }\n        return (data.get(\"file\"))\n    }\n\n    function uploadToCloudinary(data){\n        fetch(\"https://api.cloudinary.com/v1_1/seiproj3images/image/upload\", {\n            method: \"post\",\n            body: data\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                setUrl(data.url)\n                setNewPlant(prevState => (\n                    {...prevState,\n                        images : ['https://res.cloudinary.com/seiproj3images/image/upload/v1624281668/foqxjhxeuxnhefyuhctl.png', data.url] }))\n            })\n            .catch(err => console.log(err))\n    }\n\n    //to handle the change in the input fields\n    function handleChange(e) {\n        setNewPlant(prevState => ({...prevState, [e.target.name] : e.target.value }))\n    }\n\n    async function submitFlorist() {\n        console.log(newPlant)\n        try {\n            await axios.post(\"/api/admin/florist/create\", newPlant, {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    //for new dailies\n    //to handle the change in input fields\n    function handleChangeDailies(e) {\n        setNewDailies(prevState => ({...prevState, [e.target.name] : e.target.value }))\n    }\n\n    //to call /admin/dailies/create\n    async function submitDailies() {\n        try {\n            await axios.post(\"/api/admin/dailies/create\", newDailies, {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n    return (\n        <Container>\n            <Row>\n                <Col md={4}>\n                    <h3>Add New Plant to Florist</h3>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control name=\"name\" type=\"text\" placeholder=\"Name of Plant\" onChange={handleChange}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control name=\"price\" type=\"number\" placeholder=\"Price\" onChange={handleChange}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Max Growth</Form.Label>\n                            <Form.Control name=\"maxGrowth\" type=\"number\" placeholder=\"Max Growth\" onChange={handleChange}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Max Level</Form.Label>\n                            <Form.Control name=\"maxLevel\" type=\"number\" placeholder=\"Max Level\" onChange={handleChange}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control name=\"description\" type=\"text\" placeholder=\"Description\" onChange={handleChange}/>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control type=\"file\" onChange={(e) => setImage(e.target.files[0])}/>\n                            <Button onClick={uploadImage}>Upload</Button>\n                        </Form.Group>\n                        <div>\n                            <img src={url} alt=\"upload\"/>\n                        </div>\n                        <Button onClick={submitFlorist}>Submit</Button>\n                    </Form>\n                </Col>\n                <Col md={4}>\n                    <h3>Add New Dailies</h3>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Name of Dailies</Form.Label>\n                            <Form.Control name=\"name\" type=\"text\" placeholder=\"eg. Do 20 push-ups\" onChange={handleChangeDailies}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control name=\"category\" type=\"text\" placeholder=\"eg. Fitness\" onChange={handleChangeDailies}/>\n                        </Form.Group>\n                        <Button onClick={submitDailies}>Submit</Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n\n    );\n}\n\nexport default AdminPage;\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter, Switch, Route, Redirect} from \"react-router-dom\";\nimport React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updateCoins} from \"./store/actions/task.action\";\n// Components\nimport LandingPage from \"./components/landing/LandingPage\";\nimport Navigation from \"./components/lib/Navigation\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Garden from \"./components/garden/Garden\";\nimport Florist from \"./components/florist/Florist\";\nimport AdminPage from \"./components/admin/AdminPage\";\nimport {getUser} from \"./lib/checks\";\n\n\n\nfunction App() {\n    const [auth, setAuth] = useState(false)\n    const [admin, setAdmin] = useState(false)\n    const [user, setUser] = useState(null)\n\n    let coins = useSelector(state => state.coins)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        getUser().then(e => {\n            if (e.user) {\n                setAdmin(e.user.isAdmin)\n                setAuth(true)\n                setUser(e.user)\n                dispatch(updateCoins(e.user.coins))\n            } else {\n                console.log(e.message)\n            }\n        })\n    }, [auth])\n\n    async function logout() {\n        try{\n            setAdmin(false)\n            setAuth(false)\n            setUser(null)\n            await axios.delete(\"/api/logout\", {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n            localStorage.removeItem(\"token\")\n        }catch (e) {\n            console.log(e)\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                {auth && <Navigation user={user} admin={admin} coins={coins} logout={logout}/>}\n                <Switch>\n                    <Route path=\"/\" exact>\n                        {(!auth) ? <LandingPage setAuth={setAuth} setAdmin={setAdmin}/> : (!admin) ? <Dashboard setAuth={setAuth}/> : <AdminPage />}\n                    </Route>\n                    <PrivateRouter auth={auth} setAuth={setAuth} admin={admin} user={user} path=\"/dashboard\" Component={Dashboard} exact/>\n                    <PrivateRouter auth={auth} setAuth={setAuth} admin={admin} user={user} path=\"/garden\" Component={Garden} exact/>\n                    <PrivateRouter auth={auth} setAuth={setAuth} admin={admin} user={user} coins={coins} path=\"/florist\" Component={Florist} exact/>\n                </Switch>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nfunction PrivateRouter({auth, admin, Component, path, location, ...rest}) {\n    return (\n        <>\n            {(auth && !admin) ?\n                    <Route path={path} exact>\n                        <Component auth={auth} {...rest}/>\n                    </Route> :\n                <Redirect to={{pathname: \"/\", state: {from: location}}}/>\n            }\n        </>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nlet initialState = {\n    tasks: [],\n    task: {},\n    dailies: [],\n    coins: Number\n}\n\nexport function taskReducer(state=initialState, action){\n    let taskList = state.tasks\n\n    switch (action.type){\n        case \"GET_TASKS\":\n            return{\n                ...state, tasks: action.payload\n            }\n\n        case \"ARCHIVE_TASK\":\n            let index = taskList.findIndex(el => el._id.toString() === action.payload)\n\n            taskList[index].isArchived = true\n\n            return {\n                ...state, tasks: taskList\n            }\n\n        case \"DELETE_TASK\":\n            let afterDeleteLIst = taskList.filter(el => el._id !== action.payload)\n            return {\n                ...state, tasks: afterDeleteLIst\n            }\n        case \"UPDATE_COINS\":\n            return {\n                ...state, coins: action.payload\n            }\n        case \"SET_DAILIES\":\n            return{\n                ...state, dailies: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore, applyMiddleware} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {taskReducer} from \"./store/reducers/task.reducer\";\n\nconst store = createStore(taskReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <App />\n    </Provider>\n\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}