{"version":3,"sources":["store/actions/task.action.js","assets/img/nP5HPw4.jpeg","components/landing/Login.js","components/landing/Register.js","components/landing/LandingPage.js","assets/img/pixel-art-bitcoin-gold-coin.png","components/lib/Navigation.js","components/dashboard/AddTask.js","lib/checks.js","components/dashboard/Task.js","components/dashboard/TaskView.js","components/dashboard/SubBoard.js","components/dashboard/Taskboard.js","components/dashboard/DailiesBar.js","components/dashboard/Dashboard.js","components/garden/Garden.js","assets/img/florist HD.jpg","components/florist/Florist.js","components/admin/AdminPage.js","App.js","reportWebVitals.js","store/reducers/task.reducer.js","index.js"],"names":["setTaskList","tasks","type","payload","setDailies","dailies","updateCoins","coins","Login","setAuth","setAdmin","show","setShow","useState","cred","setCred","history","useHistory","a","axios","post","data","localStorage","setItem","token","user","isAdmin","push","console","log","handleChange","e","prevState","target","name","value","Modal","className","onHide","centered","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","placeholder","onChange","Button","variant","onClick","block","Register","LandingPage","auth","setUser","loginShow","setLoginShow","registerShow","setRegisterShow","Row","Col","xs","md","Image","src","forestImg","fluid","id","Navigation","admin","logout","Navbar","expand","style","backgroundColor","Brand","to","fontSize","textShadow","Toggle","aria-controls","Collapse","Nav","Item","width","height","coinImg","color","boxShadow","borderRadius","border","AddTask","addTaskShow","setAddTaskShow","getTasks","dateBy","Date","newTaskForm","setNewTaskForm","startDate","setStartDate","endDate","setEndDate","IU","IN","UU","UN","selected","setSelected","handleClose","handleQuadrantClick","attributes","isImportant","isUrgent","dateStart","headers","authorization","date","selectsStart","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","selectsEnd","minDate","as","rows","Container","isAuth","get","response","message","Task","task","handleEditTask","showTask","setShowTask","done","setDone","dispatch","useDispatch","delete","_id","useEffect","status","Toast","onClose","stopPropagation","removeTaskFromScreen","deleteTaskFromDB","textDecoration","Check","changeStatus","checked","TaskView","clickedTask","setClickedTask","editTaskShow","setEditTaskShow","parseJSON","matrixName","category","description","RenderTasks","undefined","length","map","lg","SubBoard","title","Taskboard","titleArray","subBoardBorder","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","colorMatrix","importantUrgentMatrix","RenderButton","changeStateOfDaily","buttonState","DailiesBar","daily","setButtonState","state","isArchived","newCoins","Dashboard","useSelector","dailyRes","then","suc","catch","err","getDailies","el","idx","Garden","props","plantSlots","inventory","setInventory","garden","setGarden","getInventory","plants","getGarden","index","slots","i","createSlots","Accordion","defaultActiveKey","Card","eventKey","images","currentLevel","alt","insertPlant","Florist","floristPlants","setFloristPlants","showInsufficientCoin","setShowInsufficientCoin","buyPlant","plant","find","price","newCoinsValue","getFloristPlants","floristImg","bg","Img","Text","backdrop","keyboard","AdminPage","image","setImage","url","setUrl","newPlant","setNewPlant","newDailies","setNewDailies","handleChangeDailies","files","FormData","append","createCloudinaryFormData","isFileUploaded","fetch","method","body","resp","json","uploadToCloudinary","PrivateRouter","Component","path","location","rest","exact","pathname","from","App","removeItem","getUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","Number","store","createStore","action","taskList","afterDeleteLIst","filter","dailiesArr","findIndex","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd75b1ce.chunk.js","sourcesContent":["\r\nexport function setTaskList(tasks){\r\n    return {\r\n                type: \"GET_TASKS\",\r\n                payload: tasks\r\n    }\r\n}\r\n\r\nexport function editTask(id) {\r\n    return {\r\n        type: \"GET_TASK\",\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport function removeTask(id){\r\n    return{\r\n        type: \"DELETE_TASK\",\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport function setDailies(dailies){\r\n    return{\r\n        type: \"SET_DAILIES\",\r\n        payload: dailies\r\n    }\r\n}\r\n\r\nexport function archiveDaily(id){\r\n    return{\r\n        type: \"ARCHIVE_DAILY\",\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport function updateCoins(coins){\r\n    return{\r\n        type: \"UPDATE_COINS\",\r\n        payload: coins\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/nP5HPw4.4d2f2cb7.jpeg\";","import React, {useState} from 'react';\nimport {Modal, Button, Form} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport {useHistory} from \"react-router-dom\"\n\nfunction Login({setAuth, setAdmin, show, setShow}) {\n    // Modal Open/Close State\n    const handleClose = () => setShow(false);\n\n    // Auth State\n    const [cred, setCred] = useState({})\n    let history = useHistory()\n\n    async function submit() {\n        try {\n            let {data} = await axios.post(\"/api/login\", cred)\n            localStorage.setItem(\"token\", data.token)\n            if(data.user.isAdmin) setAdmin(true)\n            setAuth(true)\n            setShow(false)\n            history.push(\"/dashboard\")\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    // Form Change\n    function handleChange(e) {\n        setCred(prevState => ({...prevState, [e.target.name] : e.target.value }))\n    }\n\n    return (\n            <Modal className=\"\" show={show} onHide={handleClose} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Log In</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={handleChange} />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange}/>\n                        </Form.Group>\n\n                        <Button variant=\"primary\" onClick={submit} block>\n                            Log In\n                        </Button>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n    );\n}\n\nexport default Login;\n","import React, {useState} from 'react';\nimport {Modal, Button, Form} from \"react-bootstrap\";\nimport {useHistory} from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction Register({show, setShow, setAuth}) {\n    const handleClose = () => setShow(false);\n    const [cred, setCred] = useState({})\n    let history = useHistory()\n\n    async function submit() {\n        try {\n            let {data: {token}} = await axios.post(\"/api/register\", cred)\n            localStorage.setItem(\"token\", token)\n            setAuth(true)\n            setShow(false)\n            history.push(\"/dashboard\")\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function handleChange(e) {\n        setCred(prevState => ({...prevState, [e.target.name] : e.target.value }))\n    }\n\n    return (\n        <Modal show={show} onHide={handleClose} centered>\n            <Modal.Header closeButton>\n                <Modal.Title>Register</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={handleChange}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control name=\"username\" type=\"text\" placeholder=\"Enter Username\" onChange={handleChange}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control name=\"passwordConfirmation\" type=\"password\" placeholder=\"Password\" onChange={handleChange}/>\n                    </Form.Group>\n                    <Button variant=\"primary\" onClick={submit}>\n                        Register\n                    </Button>\n                </Form>\n            </Modal.Body>\n        </Modal>\n    );\n}\n\nexport default Register;\n","import React, {useState} from 'react';\nimport {Button, Col, Image, Row} from \"react-bootstrap\";\nimport forestImg from \"../../assets/img/nP5HPw4.jpeg\"\nimport Login from \"./Login\";\nimport Register from \"./Register\";\n\nfunction LandingPage({auth, setAuth, setAdmin, setUser}) {\n    const [loginShow, setLoginShow] = useState(false);\n    const [registerShow, setRegisterShow] = useState(false);\n    const handleLoginShow = () => setLoginShow(true);\n    const handleRegisterShow = () => setRegisterShow(true);\n\n    return (\n        <Row className=\"flex-grow-1\">\n            <Col xs={12} md={7} className=\"bg-dark align-content-center\">\n                <Row>\n                    <Row className=\"text-center\">\n                        <Col className=\"text-white h1\">Task Garden</Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Image src={forestImg} fluid id=\"landingForest\"/>\n                        </Col>\n                    </Row>\n                </Row>\n            </Col>\n            <Col xs={5} >\n                <Col>\n                    <Row >\n                        <Col >\n                            <Row className=\"justify-content-center\">\n                                Have an Account? Sign in!\n                            </Row>\n                            <Row className=\"justify-content-center\">\n                                <Button variant=\"primary\" className=\"landingButton\" onClick={handleLoginShow}>\n                                    Sign in\n                                </Button>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Row className=\"justify-content-center\">\n                                If not, register here!\n                            </Row>\n                            <Row className=\"justify-content-center\">\n                                <Button variant=\"primary\" className=\"landingButton\" onClick={handleRegisterShow}>\n                                    Register\n                                </Button>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Col>\n            </Col>\n            <Login show={loginShow} setShow={setLoginShow} setAuth={setAuth} setAdmin={setAdmin}/>\n            <Register show={registerShow} setShow={setRegisterShow} setAuth={setAuth}/>\n        </Row>\n    );\n}\n\nexport default LandingPage;\n","export default __webpack_public_path__ + \"static/media/pixel-art-bitcoin-gold-coin.a640bf77.png\";","import React from 'react';\nimport {Navbar, Nav, Button, Image} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport coinImg from \"../../assets/img/pixel-art-bitcoin-gold-coin.png\"\n\nfunction Navigation({admin, logout, user, coins}) {\n\n    const logoutButtonStyle = {\n        backgroundColor: \"rgba(58, 70, 93, 1)\",\n        color: \"white\",\n        boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\n        borderRadius: \"5px\",\n        border: \"none\"\n    }\n\n    return (\n        <Navbar expand=\"lg\" id=\"navbar\" className=\"p-0\" style={{backgroundColor: \"rgba(81, 163, 136, 1)\"}}>\n            <Navbar.Brand id=\"navbarBrand\" style={{backgroundColor: \"rgba(196, 196, 196, 0.3)\"}}>\n                <NavLink to=\"/\" style={{fontSize: \"2.5rem\", textShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\"}} className=\"py-0 px-5 nav-link text-white\">Task Garden</NavLink>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className=\"ml-5\"/>\n            <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\n                <Nav className=\"mx-4 align-items-center\" style={{textShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\"}}>\n                    {!admin &&\n                        <>\n                            <Nav.Item className=\"nav-link text-white\">\n                            <Image style={{width: \"25px\", height: \"25px\"}} src={coinImg} className=\"mr-1\" />\n                            {user ? coins : 0}\n                            </Nav.Item>\n                            <NavLink to=\"/dashboard\" className=\"nav-link text-white\">Dashboard</NavLink>\n                            <NavLink to=\"/garden\" className=\"nav-link text-white\">Garden</NavLink>\n                            <NavLink to=\"/florist\" className=\"nav-link text-white\">Florist</NavLink>\n                        </>\n                    }\n                    <Button style={logoutButtonStyle} onClick={logout}>Logout</Button>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Navigation;\n","import React, {useState} from 'react';\nimport {Button, Modal, Form, Row, Container, Col} from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\n\nfunction AddTask({addTaskShow, setAddTaskShow, getTasks}) {\n    const [newTaskForm, setNewTaskForm] = useState({dateBy: new Date()}) // Form State\n    // Datepicker\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n    const [selected, setSelected] = useState({IU: \"none\", IN: \"none\", UU: \"none\", UN: \"none\"})\n\n    // Add Task Modal\n    function handleClose() { // Function to close Modal\n        setAddTaskShow(false);\n        setSelected({IU: \"none\", IN: \"none\", UU: \"none\", UN: \"none\"})\n    }\n\n    // Form change\n    function handleChange(e) {\n        setNewTaskForm(prevState => ({...prevState, [e.target.name] : e.target.value }))\n    }\n\n    function handleQuadrantClick(e, value) {\n        if(selected[e.target.attributes.name.value] === \"none\") {\n            setSelected({IU: \"none\", IN: \"none\", UU: \"none\", UN: \"none\"})\n            setSelected(prevState => ({...prevState, [e.target.attributes.name.value]: \"3px solid yellow\" }))\n            setNewTaskForm(prevState => ({...prevState, isImportant: value.isImportant, isUrgent: value.isUrgent}))\n        }\n        else {\n            setSelected(prevState => ({...prevState, [e.target.attributes.name.value]: \"none\"}))\n            setNewTaskForm(prevState => ({...prevState, isImportant: false, isUrgent: false}))\n        }\n    }\n\n    async function submit() {\n        try {\n            await axios.post(\"/api/tasks/create\", {...newTaskForm, dateStart: startDate, dateBy: endDate}, {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n            handleClose()\n            getTasks()\n        } catch (e) {\n            console.log(e)\n        }\n        setNewTaskForm(prevState => ({...prevState, isImportant: false, isUrgent: false}))\n    }\n\n    return (\n        <Modal show={addTaskShow} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Add New Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body >\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Task Title</Form.Label>\n                        <Form.Control name=\"name\" type=\"text\" placeholder=\"Task Title\" onChange={handleChange}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Category</Form.Label>\n                        <Form.Control name=\"category\" type=\"text\" placeholder=\"Category\" onChange={handleChange}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Start Date</Form.Label>\n                            <DatePicker\n                                selected={startDate}\n                                onChange={(date) => setStartDate(date)}\n                                selectsStart\n                                startDate={startDate}\n                                endDate={endDate}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                timeIntervals={15}\n                                timeCaption=\"Time\"\n                                dateFormat=\"d MMM yyyy, h:mm aa\"\n                            />\n                        <br/>\n                            <Form.Label>Completed By</Form.Label>\n                            <DatePicker\n                                selected={endDate}\n                                onChange={(date) => setEndDate(date)}\n                                selectsEnd\n                                startDate={startDate}\n                                endDate={endDate}\n                                minDate={startDate}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                timeIntervals={15}\n                                timeCaption=\"Time\"\n                                dateFormat=\"d MMM yyyy, h:mm aa\"\n                            />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control name=\"description\" as=\"textarea\" rows={3} placeholder=\"Enter a description\" onChange={handleChange}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Select Plant</Form.Label>\n                        <Form.Control as=\"select\" onChange={handleChange}>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Container>\n                        <Row>\n                            <Col style={{\n                                backgroundColor: \"rgba(231, 85, 85,1)\",\n                                border: `${selected.IU}`\n                            }}\n                                 name=\"IU\"\n                                 onClick={(e) => handleQuadrantClick(e, {isImportant: true, isUrgent: true})}>\n                                Important Urgent\n                            </Col>\n                            <Col style={{backgroundColor: \"rgba(224, 159, 159)\",\n                                border: `${selected.IN}`\n                            }}\n                                 name=\"IN\"\n                                 onClick={(e) => handleQuadrantClick(e, {isImportant: true, isUrgent: false})}>\n                                Important Not-Urgent\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col style={{backgroundColor: \"rgba(241, 181, 121,1)\",\n                                border: `${selected.UU}`\n                            }}\n                                 name=\"UU\"\n                                 onClick={(e) => handleQuadrantClick(e, {isImportant: false, isUrgent: true})}>\n                                Unimportant Urgent\n                        </Col>\n                            <Col style={{backgroundColor: \"rgba(54, 150, 148,1)\",\n                                border: `${selected.UN}`\n                            }}\n                                 name=\"UN\"\n                                 onClick={(e) => handleQuadrantClick(e, {isImportant: false, isUrgent: false})}>\n                                Unimportant Not-Urgent\n                        </Col>\n                    </Row>\n                    </Container>\n                    <br/>\n\n                    <Button variant=\"primary\" onClick={submit}>\n                        Submit\n                    </Button>\n                </Form>\n            </Modal.Body>\n        </Modal>\n    );\n}\n\nexport default AddTask;\n","import axios from \"axios\";\r\n\r\nexport async function isAuth(){\r\n    try{\r\n        await axios.get('/api/check', {\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.token}`\r\n            }\r\n        })\r\n        return true\r\n    }catch(e){\r\n        console.log(e.response)\r\n        return false\r\n    }\r\n}\r\n\r\nexport async function getUser(){\r\n    try{\r\n        let user = await axios.get('/api/user',{\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.token}`\r\n            }\r\n        })\r\n        return user.data\r\n    }catch(e){\r\n        return {message: \"Failed to get user\"}\r\n    }\r\n}\r\n\r\nexport async function setUserStats(setAuth, setUser, setAdmin) {\r\n    try {\r\n        let {data} = await axios.get(\"/api/user\", {\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.token}`\r\n            }\r\n        })\r\n        setAuth(true)\r\n        if(data.user.isAdmin) setAdmin(true)\r\n        setUser(data.user)\r\n    } catch (e) {\r\n        setAdmin(false)\r\n        setAuth(false)\r\n        setUser(null)\r\n        await axios.delete(\"/api/logout\", {\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.token}`\r\n            }\r\n        })\r\n        localStorage.removeItem(\"token\")\r\n    }\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Form, Toast} from \"react-bootstrap\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {removeTask} from \"../../store/actions/task.action\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction Task({task, handleEditTask}) {\r\n    const [showTask, setShowTask] = useState(true)\r\n    const [done, setDone] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const strikethrough = {\r\n        textDecoration: \"line-through\"\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (task.status === \"Completed\") {\r\n            setDone(true)\r\n        }else{\r\n            setDone(false)\r\n        }\r\n        console.log(task)\r\n    },[])\r\n\r\n    function deleteTask(e){\r\n        e.stopPropagation()\r\n        removeTaskFromScreen();\r\n        deleteTaskFromDB()\r\n    }\r\n    async function deleteTaskFromDB(){\r\n        await axios.delete(`/api/tasks/delete/${task._id}`,{\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.token}`\r\n            }\r\n        })\r\n    }\r\n    function removeTaskFromScreen() {\r\n        setShowTask(false)\r\n        dispatch(removeTask(task._id))\r\n    }\r\n\r\n    function handleDone(e){\r\n        //setDone(!done)\r\n        changeStatus()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    async function changeStatus(){\r\n        try{\r\n            let statusRes = await axios.get(`/api/tasks/done/${task._id}`, {\r\n                headers: {\r\n                    authorization: `Bearer ${localStorage.token}`\r\n                }\r\n            })\r\n            if (statusRes.data.payload === \"Completed\"){\r\n                setDone(true)\r\n            }else{\r\n                setDone(false)\r\n            }\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n            <Toast show={showTask} onClose={deleteTask} >\r\n\r\n                <Toast.Header >\r\n                    <strong style={done?{textDecoration: \"line-through\"}:{textDecoration: \"none\"}}\r\n                            onClick={e=>handleEditTask(e,task)}\r\n                            className={`mr-auto`}>\r\n                        {task.name}\r\n                    </strong>\r\n                    <Form.Check type={\"checkbox\"} onChange={handleDone} checked={done}/>\r\n                </Toast.Header>\r\n\r\n                {/*<Toast.Body>{task.category}</Toast.Body>*/}\r\n            </Toast>\r\n    );\r\n}\r\n\r\nexport default Task;\r\n","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Container, Form, Modal, Row} from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport {parseJSON} from \"date-fns\";\nimport axios from \"axios\";\n\nfunction TaskView({clickedTask, setClickedTask, editTaskShow, setEditTaskShow, getTasks}) {\n    const [startDate, setStartDate] = useState();\n    const [endDate, setEndDate] = useState();\n    const [selected, setSelected] = useState({IU: \"none\", IN: \"none\", UU: \"none\", UN: \"none\"})\n\n    useEffect(() => {\n        if(clickedTask.dateStart && clickedTask.dateBy) {\n            setStartDate(parseJSON(clickedTask.dateStart))\n            setEndDate(parseJSON(clickedTask.dateBy))\n        }\n        if(clickedTask) {\n            setSelected({IU: \"none\", IN: \"none\", UU: \"none\", UN: \"none\"})\n            let matrixName = \"\"\n\n            if(clickedTask.isImportant) matrixName += \"I\"\n            else matrixName += \"U\"\n\n            if(clickedTask.isUrgent) matrixName += \"U\"\n            else matrixName += \"N\"\n\n            setSelected(prevState => ({...prevState, [matrixName]: \"3px solid yellow\" }))\n        }\n    },[editTaskShow])\n\n\n    // Modal Close\n    function handleClose() {\n        setEditTaskShow(false)\n    }\n\n    // Form Change\n    function handleChange(e) {\n        setClickedTask(prevState => ({...prevState, [e.target.name]: e.target.value}))\n    }\n\n    // Matrix selector\n    function handleQuadrantClick(e, value) {\n        if(selected[e.target.attributes.name.value] === \"none\") {\n            setSelected({IU: \"none\", IN: \"none\", UU: \"none\", UN: \"none\"})\n            setSelected(prevState => ({...prevState, [e.target.attributes.name.value]: \"3px solid yellow\" }))\n            setClickedTask(prevState => ({...prevState, isImportant: value.isImportant, isUrgent: value.isUrgent}))\n        }\n        else {\n            setSelected(prevState => ({...prevState, [e.target.attributes.name.value]: \"none\"}))\n            setClickedTask(prevState => ({...prevState, isImportant: false, isUrgent: false}))\n        }\n    }\n\n    // Save Changes\n    async function saveForm() {\n\n        try {\n          await axios.post(`/api/tasks/edit/${clickedTask._id}`, {...clickedTask, dateStart: startDate, dateBy: endDate} , {\n              headers: {\n                  authorization: `Bearer ${localStorage.token}`\n              }\n          })\n            handleClose()\n            getTasks()\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n    return (\n        <>\n            {clickedTask &&\n            <Modal show={editTaskShow} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Task</Modal.Title>\n                </Modal.Header>\n                <Modal.Body >\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Task Title</Form.Label>\n                            <Form.Control name=\"name\" type=\"text\" placeholder=\"Task Title\" value={clickedTask.name} onChange={handleChange}/>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control name=\"category\" type=\"text\" placeholder=\"Category\" value={clickedTask.category} onChange={handleChange}/>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Start Date</Form.Label>\n                            <DatePicker\n                                selected={startDate}\n                                onChange={(date) => setStartDate(date)}\n                                selectsStart\n                                startDate={startDate}\n                                endDate={endDate}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                timeIntervals={15}\n                                timeCaption=\"Time\"\n                                dateFormat=\"d MMM yyyy, h:mm aa\"\n                            />\n                            <br/>\n                            <Form.Label>Completed By</Form.Label>\n                            <DatePicker\n                                selected={endDate}\n                                onChange={(date) => setEndDate(date)}\n                                selectsEnd\n                                startDate={startDate}\n                                endDate={endDate}\n                                minDate={startDate}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                timeIntervals={15}\n                                timeCaption=\"Time\"\n                                dateFormat=\"d MMM yyyy, h:mm aa\"\n                            />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control name=\"description\" as=\"textarea\" rows={3} placeholder=\"Enter a description\" value={clickedTask.description} onChange={handleChange}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                            <Form.Label>Select Plant</Form.Label>\n                            <Form.Control as=\"select\" onChange={handleChange}>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Container>\n                            <Row>\n                                <Col style={{\n                                    backgroundColor: \"rgba(231, 85, 85,1)\",\n                                    border: `${selected.IU}`\n                                }}\n                                     name=\"IU\"\n                                     onClick={(e) => handleQuadrantClick(e, {isImportant: true, isUrgent: true})}>\n                                    Important Urgent\n                                </Col>\n                                <Col style={{backgroundColor: \"rgba(224, 159, 159)\",\n                                    border: `${selected.IN}`\n                                }}\n                                     name=\"IN\"\n                                     onClick={(e) => handleQuadrantClick(e, {isImportant: true, isUrgent: false})}>\n                                    Important Not-Urgent\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col style={{backgroundColor: \"rgba(241, 181, 121,1)\",\n                                    border: `${selected.UU}`\n                                }}\n                                     name=\"UU\"\n                                     onClick={(e) => handleQuadrantClick(e, {isImportant: false, isUrgent: true})}>\n                                    Unimportant Urgent\n                                </Col>\n                                <Col style={{backgroundColor: \"rgba(54, 150, 148,1)\",\n                                    border: `${selected.UN}`\n                                }}\n                                     name=\"UN\"\n                                     onClick={(e) => handleQuadrantClick(e, {isImportant: false, isUrgent: false})}>\n                                    Unimportant Not-Urgent\n                                </Col>\n                            </Row>\n                        </Container>\n                        <br/>\n\n                        <Button variant=\"primary\" onClick={saveForm}>\n                            Submit\n                        </Button>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n            }\n        </>\n    );\n}\n\nexport default TaskView;\n","import React, {useEffect, useState} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Task from \"./Task\";\r\nimport TaskView from \"./TaskView\";\r\n\r\nfunction SubBoard({tasks, getTasks, isImportant, isUrgent, color, title, border}) {\r\n    // CSS\r\n    const style = {\r\n        ...color,\r\n        height: \"35vh\",\r\n        boxShadow: \"10px 10px 4px 0 rgba(0, 0, 0, 0.25)\",\r\n        ...border\r\n    }\r\n    const titleStyle = {\r\n        backgroundColor: \"rgba(65, 90, 95, 0.25)\",\r\n        color: \"white\",\r\n        borderRadius: \"10px\",\r\n        boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.25)\"\r\n    }\r\n\r\n    // Edit Task Modal\r\n    const [editTaskShow, setEditTaskShow] = useState(false);\r\n\r\n    // Clicked task state\r\n    const [clickedTask, setClickedTask] = useState({})\r\n\r\n    function handleEditTask(e, task) {\r\n        setEditTaskShow(true)\r\n        setClickedTask(task)\r\n    }\r\n\r\n    return (\r\n        <Container style={style}>\r\n            <Row className=\"mx-auto\" style={{height: \"15%\"}}>\r\n                <Col md={5}></Col>\r\n                <Col md={2} style={titleStyle} className=\"px-0 py-1 my-auto\">\r\n                    {title}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mt-3\">\r\n                <RenderTasks tasks={tasks} isImportant={isImportant} isUrgent={isUrgent} handleEditTask={handleEditTask}/>\r\n            </Row>\r\n            <TaskView editTaskShow={editTaskShow}\r\n                      setEditTaskShow={setEditTaskShow}\r\n                      clickedTask={clickedTask}\r\n                      setClickedTask={setClickedTask}\r\n                      getTasks={getTasks}/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nfunction RenderTasks({tasks, isImportant, isUrgent, handleEditTask}){\r\n    //onClick={(e) => handleEditTask(e, task)}\r\n    if (tasks === undefined){\r\n        return(\r\n            <>\r\n                Error unable to get Tasks...\r\n            </>\r\n        )\r\n    }\r\n    if (tasks.length >= 0){\r\n        return(\r\n            <>\r\n                {tasks.map(task => (\r\n                        (task.isImportant === isImportant && task.isUrgent === isUrgent) &&\r\n                        <Col lg={6} md={12} key={task._id} >\r\n                            <Task task={task} handleEditTask={handleEditTask}/>\r\n                        </Col>\r\n                    )\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n    return(\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default SubBoard;\r\n","import React from 'react';\r\nimport SubBoard from \"./SubBoard\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\nfunction Taskboard({tasks, getTasks}) {\r\n\r\n    const titleArray = [\"Do\", \"Decide\", \"Delegate\", \"Drop\"]\r\n    const subBoardBorder = [\r\n        {borderTopLeftRadius: \"15px\"},\r\n        {borderTopRightRadius: \"15px\"},\r\n        {borderBottomLeftRadius: \"15px\"},\r\n        {borderBottomRightRadius: \"15px\"}\r\n    ]\r\n    const colorMatrix = {\r\n        color: [\r\n            {backgroundColor: \"rgba(231, 85, 85,1)\"},\r\n            {backgroundColor: \"rgba(224, 159, 159)\"},\r\n            {backgroundColor: \"rgba(241, 181, 121,1)\"},\r\n            {backgroundColor: \"rgba(54, 150, 148,1)\"}\r\n        ]\r\n    }\r\n    const importantUrgentMatrix = {\r\n        isImportant: [true,true,false,false],\r\n        isUrgent: [true,false,true,false]\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col md={6} className={`px-0`}>\r\n                    <SubBoard tasks={tasks}\r\n                              getTasks={getTasks}\r\n                              isImportant={importantUrgentMatrix.isImportant[0]}\r\n                              isUrgent={importantUrgentMatrix.isUrgent[0]}\r\n                              color={colorMatrix.color[0]}\r\n                              title={titleArray[0]}\r\n                              border={subBoardBorder[0]}/>\r\n                </Col>\r\n                <Col md={6} className={`px-0`}>\r\n                    <SubBoard tasks={tasks}\r\n                              getTasks={getTasks}\r\n                              isImportant={importantUrgentMatrix.isImportant[1]}\r\n                              isUrgent={importantUrgentMatrix.isUrgent[1]}\r\n                              color={colorMatrix.color[1]}\r\n                              title={titleArray[1]}\r\n                              border={subBoardBorder[1]}/>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row>\r\n                <Col md={6} className={`px-0`}>\r\n                    <SubBoard tasks={tasks}\r\n                              getTasks={getTasks}\r\n                              isImportant={importantUrgentMatrix.isImportant[2]}\r\n                              isUrgent={importantUrgentMatrix.isUrgent[2]}\r\n                              color={colorMatrix.color[2]}\r\n                              title={titleArray[2]}\r\n                              border={subBoardBorder[2]}/>\r\n                </Col>\r\n                <Col md={6} className={`px-0`}>\r\n                    <SubBoard tasks={tasks}\r\n                              getTasks={getTasks}\r\n                              isImportant={importantUrgentMatrix.isImportant[3]}\r\n                              isUrgent={importantUrgentMatrix.isUrgent[3]}\r\n                              color={colorMatrix.color[3]}\r\n                              title={titleArray[3]}\r\n                              border={subBoardBorder[3]}/>\r\n                </Col>\r\n\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Taskboard;\r\n","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Container, Row} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateCoins} from \"../../store/actions/task.action\";\n\nfunction DailiesBar({daily}) {\n    let [buttonState, setButtonState] = useState(false)\n    let containerStyle = {\n        border: \"5px solid rgba(35, 108, 56, 1)\",\n        backgroundColor: \"white\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.25)\"\n    }\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        setButtonState(daily[\"isArchived\"])\n    },[])\n\n    async function changeStateOfDaily() {\n        let state = await axios.post(`/api/tasks/dailies/${daily._id}`, daily, {\n            headers: {\n                authorization: `Bearer ${localStorage.token}`\n            }\n        })\n        setButtonState(state.data.isArchived)\n\n        //update the store\n        dispatch(updateCoins(state.data.newCoins))\n    }\n\n\n\n    return (\n        <Container style={containerStyle} className=\"mt-3\" >\n            <Row className=\"align-items-center\">\n                <Col md={9}>\n                    Dailies\n                    <br/>\n                    {daily.name}\n                </Col>\n                <Col md={3}>\n                    <RenderButton changeStateOfDaily={changeStateOfDaily} buttonState={buttonState}/>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nfunction RenderButton({changeStateOfDaily, buttonState}){\n    let doneBtnStyle = {\n        border: \"3px solid rgba(50, 136, 29, 1)\",\n        backgroundColor: \"rgba(78, 201, 47, 1)\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.25)\"\n    }\n    let notDoneBtnStyle = {\n        border: \"3px solid rgba(68,9,9, 1)\",\n        backgroundColor: \"rgb(208,30,30)\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.25)\"\n    }\n    if(buttonState){\n        return(\n            <Button onClick={changeStateOfDaily} style={doneBtnStyle}>\n                \"Done\"\n            </Button>\n        )\n    }else{\n        return(\n            <Button onClick={changeStateOfDaily} style={notDoneBtnStyle}>\n                Not Done\n            </Button>\n        )\n    }\n}\n\nexport default DailiesBar;\n","import React, {useEffect, useState} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport AddTask from \"./AddTask\";\nimport axios from \"axios\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {setTaskList, setDailies} from \"../../store/actions/task.action\";\nimport {isAuth} from \"../../lib/checks\";\nimport Taskboard from \"./Taskboard\";\nimport DailiesBar from \"./DailiesBar\";\n\nfunction Dashboard({auth, setAuth}) {\n    // Add Task Modal\n    const [addTaskShow, setAddTaskShow] = useState(false); // Modal appearance state\n    const handleShow = () => setAddTaskShow(true); // Function to show Modal\n    const addTaskButtonStyle = {\n        width: \"50px\",\n        fontSize: \"2rem\",\n        color: \"white\",\n        backgroundColor: \"rgba(58, 70, 93, 1)\",\n        borderRadius: \"50%\",\n    }\n\n    let tasks = useSelector(state => state.tasks)\n    let dailies = useSelector(state => state.dailies)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        isAuth().then(suc => setAuth(suc)).catch(err => setAuth(err))\n        getTasks()\n        getDailies()\n\n    }, [])\n\n    async function getTasks() {\n        try {\n            let {data} = await axios.get(\"/api/tasks\", {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n            console.log(data.tasks)\n            dispatch(setTaskList(data.tasks))\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    async function getDailies() {\n        try {\n            let dailyRes = await axios.get(\"/api/tasks/dailies\", {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n            let dailies = dailyRes.data.dailies\n            dispatch(setDailies(dailies))\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n    return (\n        <>\n            {   dailies ?\n                dailies.map((el,idx)=>(\n                    <DailiesBar daily={el} key={idx} />\n                )) : <div>Loading...</div>\n            }\n\n            <Container className=\"mr-3 my-2\" style={addTaskButtonStyle} onClick={handleShow}>\n                +\n            </Container>\n            <AddTask addTaskShow={addTaskShow} setAddTaskShow={setAddTaskShow} getTasks={getTasks} />\n            <Container>\n                <Taskboard tasks={tasks} getTasks={getTasks}/>\n            </Container>\n        </>\n    );\n}\n\nexport default Dashboard;\n","import React, {useEffect, useState} from 'react';\nimport {Accordion, Card, Col, Container, Button, Row, Image} from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction Garden(props) {\n    // Number of slots in garden\n    const PLANTSLOTSNUMBER = 9\n    let plantSlots = []\n\n    const [inventory, setInventory] = useState([])\n    const [selected, setSelected] = useState(\"\")\n    const [garden, setGarden] = useState([])\n\n    useEffect(() => {\n        getInventory()\n        getGarden()\n    },[])\n\n    async function getInventory() {\n        let {data: {plants}} = await axios.get(\"/api/garden/inventory\", {\n            headers: {\n                authorization: `Bearer ${localStorage.token}`\n            }\n        })\n        setInventory(plants)\n    }\n\n    async function getGarden() {\n        let {data: {garden}} = await axios.get(\"/api/garden/\", {\n            headers: {\n                authorization: `Bearer ${localStorage.token}`\n            }\n        })\n        setGarden(garden.plants)\n    }\n\n    function selectPlants(id) {\n        setSelected(\"\")\n        if(selected !== id) setSelected(id)\n    }\n\n    // Loop to push PLANTSLOTSNUMBER * elements into plantSlots\n    function createSlots(slots) {\n        for (let i = 0; i < slots; i++) {\n            plantSlots.push({})\n        }\n    } createSlots(PLANTSLOTSNUMBER)\n\n    async function insertPlant(index){\n        if(selected && !garden[index]) {\n            let {data} = await axios.post(`/api/garden/inventory/${selected}`, {index}, {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n            getInventory()\n            getGarden()\n        }\n        setSelected(\"\")\n    }\n\n    return (\n        <Container className=\"my-5\">\n            <Row>\n                <Col md={3}>\n        <Accordion defaultActiveKey=\"0\">\n            <Card>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"primary\" eventKey=\"0\">\n                        Inventory\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                        {inventory.length > 0 && inventory.map(el => (\n                        <Container key={el._id}\n                                   className=\"my-4\"\n                                   style={{\n                                       border: `3px solid ${(selected === el._id) ? 'yellow' : \"white\"}`\n                                   }}>\n                            <Image src={el.images[el.currentLevel - 1]} alt={el.name} fluid onClick={() => selectPlants(el._id)} />\n                            {el.name}\n                        </Container>\n                        ))}\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        </Accordion>\n                </Col>\n                <Col md={9}>\n                    <Container style={{height: \"70vh\", backgroundColor: \"green\"}}>\n                        <Row style={{height: \"100%\"}}>\n                            {plantSlots.map((el,i) =>\n                            <Col md={4} className=\"my-3\">\n                                <Container style={{\n                                    backgroundColor: \"rgb(255, 255, 255, 0.3)\",\n                                    borderRadius: \"10px\",\n                                    height: \"100%\",\n                                    width: \"100%\"\n                                }}\n                                           onClick={() => insertPlant(i)}>\n                                    {((garden) && (garden.length > 0) && (garden[i] != null) )&&\n                                        <Image src={garden[i].images[garden[i].currentLevel - 1]} alt={garden[i].name} fluid/>\n                                    }\n                                </Container>\n                            </Col>\n                            )}\n                        </Row>\n                    </Container>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Garden;\n","export default __webpack_public_path__ + \"static/media/florist HD.baab64be.jpg\";","import React, {useEffect, useState} from 'react';\nimport floristImg from '../../assets/img/florist HD.jpg'\nimport {Col, Image, Card, Container, Row, Button, Modal} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport {isAuth} from \"../../lib/checks\";\nimport coinImg from \"../../assets/img/pixel-art-bitcoin-gold-coin.png\"\nimport {useDispatch} from \"react-redux\";\nimport {updateCoins} from \"../../store/actions/task.action\";\n\n\nfunction Florist({user, auth, setAuth, admin, coins}) {\n\n    const [floristPlants, setFloristPlants] = useState([])\n    const [showInsufficientCoin, setShowInsufficientCoin] = useState(false);\n\n    const handleClose = () => setShowInsufficientCoin(false);\n\n    const dispatch = useDispatch()\n\n    useEffect(()=>{\n        isAuth().then(suc => setAuth(suc)).catch(err => setAuth(err))\n        getFloristPlants()\n    },[])\n\n    //to get the plants from DB for the shop\n    async function getFloristPlants(){\n        try{\n            let floristPlants = await axios.get('/api/florist', {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }})\n            setFloristPlants(floristPlants.data.payload)\n        }catch(e){\n            console.log(e.response)\n        }\n    }\n\n    //when buy button is clicked\n    async function buyPlant(e){\n        try{\n            //finding the array of the plant clicked\n            let plant = floristPlants.find(({_id}) => _id == e.target.value)\n\n            //check if user have enough coins\n            if(plant.price > coins){\n                return setShowInsufficientCoin(true)\n            }\n\n            //send user, coins and plant to backend and get back a response of updated coins\n            let newCoinsValue = await axios.post('/api/florist/buy',{coins,plant},{\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }})\n\n            //updates the store\n            dispatch(updateCoins(newCoinsValue.data.newCoins))\n\n        }catch(e){\n            console.log(e.response)\n        }\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col md={5}>\n                    <Image src={floristImg} fluid/>\n                </Col>\n                <Col md={7}>\n                    <Row md={3} xs={1} className=\"g-4\">\n\n                        {floristPlants.length > 0 && floristPlants.map(plant => (\n                            <Col key={plant._id}>\n                                <Card  style={{width: \"9rem\"}} bg=\"warning\">\n                                    <Card.Img variant=\"top\" src={plant.images[1]} style={{width: \"110px\", height: \"110px\"}}  />\n                                    <Card.Body>\n                                        <Card.Title>{plant.name}</Card.Title>\n                                        <Card.Text>\n                                            <Image style={{width: \"25px\", height: \"25px\"}} src={coinImg} />\n                                            {plant.price}\n                                        </Card.Text>\n                                        <Button onClick={buyPlant} value={plant._id}>Buy</Button>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        ))}\n                    </Row>\n                    <Modal\n                        show={showInsufficientCoin}\n                        onHide={handleClose}\n                        backdrop=\"static\"\n                        keyboard={false}\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title>u no moneh</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            You have insufficient coins for this purchase. Please do more dailies.\n                        </Modal.Body>\n                    </Modal>\n                </Col>\n            </Row>\n\n        </Container>\n    );\n}\n\nexport default Florist;\n","import React, {useState} from 'react';\nimport {Button, Form, Container, Row, Col} from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction AdminPage(props) {\n    const [image, setImage] = useState(\"\")\n    const [url, setUrl] = useState(\"\")\n    const [newPlant, setNewPlant] = useState({})\n    const [newDailies, setNewDailies] = useState({})\n\n\n//for new plant\n//to upload the image onto the cloud\n    const uploadImage = () =>{\n        const data = createCloudinaryFormData();\n        if (isFileUploaded(data)){\n            uploadToCloudinary(data)\n        }\n    }\n\n    function createCloudinaryFormData() {\n        const data = new FormData()\n        data.append(\"file\", image)\n        data.append(\"upload_preset\", \"taskgarden\")\n        data.append(\"cloud_name\", \"seiproj3images\")\n        return data;\n    }\n\n    function isFileUploaded(data){\n        if (!data.get(\"file\")){\n            console.log(\"Please upload a file\")\n        }\n        return (data.get(\"file\"))\n    }\n\n    function uploadToCloudinary(data){\n        fetch(\"https://api.cloudinary.com/v1_1/seiproj3images/image/upload\", {\n            method: \"post\",\n            body: data\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                setUrl(data.url)\n                setNewPlant(prevState => (\n                    {...prevState,\n                        images : ['https://res.cloudinary.com/seiproj3images/image/upload/v1624281668/foqxjhxeuxnhefyuhctl.png', data.url] }))\n            })\n            .catch(err => console.log(err))\n    }\n\n    //to handle the change in the input fields\n    function handleChange(e) {\n        setNewPlant(prevState => ({...prevState, [e.target.name] : e.target.value }))\n    }\n\n    async function submitFlorist() {\n        console.log(newPlant)\n        try {\n            await axios.post(\"/api/admin/florist/create\", newPlant, {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    //for new dailies\n    //to handle the change in input fields\n    function handleChangeDailies(e) {\n        setNewDailies(prevState => ({...prevState, [e.target.name] : e.target.value }))\n    }\n\n    //to call /admin/dailies/create\n    async function submitDailies() {\n        try {\n            await axios.post(\"/api/admin/dailies/create\", newDailies, {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n    return (\n        <Container>\n            <Row>\n                <Col md={4}>\n                    <h3>Add New Plant to Florist</h3>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control name=\"name\" type=\"text\" placeholder=\"Name of Plant\" onChange={handleChange}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control name=\"price\" type=\"number\" placeholder=\"Price\" onChange={handleChange}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Max Growth</Form.Label>\n                            <Form.Control name=\"maxGrowth\" type=\"number\" placeholder=\"Max Growth\" onChange={handleChange}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Max Level</Form.Label>\n                            <Form.Control name=\"maxLevel\" type=\"number\" placeholder=\"Max Level\" onChange={handleChange}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control name=\"description\" type=\"text\" placeholder=\"Description\" onChange={handleChange}/>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control type=\"file\" onChange={(e) => setImage(e.target.files[0])}/>\n                            <Button onClick={uploadImage}>Upload</Button>\n                        </Form.Group>\n                        <div>\n                            <img src={url} alt=\"upload\"/>\n                        </div>\n                        <Button onClick={submitFlorist}>Submit</Button>\n                    </Form>\n                </Col>\n                <Col md={4}>\n                    <h3>Add New Dailies</h3>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Name of Dailies</Form.Label>\n                            <Form.Control name=\"name\" type=\"text\" placeholder=\"eg. Do 20 push-ups\" onChange={handleChangeDailies}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control name=\"category\" type=\"text\" placeholder=\"eg. Fitness\" onChange={handleChangeDailies}/>\n                        </Form.Group>\n                        <Button onClick={submitDailies}>Submit</Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n\n    );\n}\n\nexport default AdminPage;\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter, Switch, Route, Redirect} from \"react-router-dom\";\nimport React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updateCoins} from \"./store/actions/task.action\";\n// Components\nimport LandingPage from \"./components/landing/LandingPage\";\nimport Navigation from \"./components/lib/Navigation\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Garden from \"./components/garden/Garden\";\nimport Florist from \"./components/florist/Florist\";\nimport AdminPage from \"./components/admin/AdminPage\";\nimport {getUser} from \"./lib/checks\";\n\n\n\nfunction App() {\n    const [auth, setAuth] = useState(false)\n    const [admin, setAdmin] = useState(false)\n    const [user, setUser] = useState(null)\n\n    let coins = useSelector(state => state.coins)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        getUser().then(e => {\n            if (e.user) {\n                setAdmin(e.user.isAdmin)\n                setAuth(true)\n                setUser(e.user)\n                dispatch(updateCoins(e.user.coins))\n            } else {\n                console.log(e.message)\n            }\n        })\n    }, [auth])\n\n    async function logout() {\n        try{\n            setAdmin(false)\n            setAuth(false)\n            setUser(null)\n            await axios.delete(\"/api/logout\", {\n                headers: {\n                    authorization: `Bearer ${localStorage.token}`\n                }\n            })\n            localStorage.removeItem(\"token\")\n        }catch (e) {\n            console.log(e)\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                {auth && <Navigation user={user} admin={admin} coins={coins} logout={logout}/>}\n                <Switch>\n                    <Route path=\"/\" exact>\n                        {(!auth) ? <LandingPage setAuth={setAuth} setAdmin={setAdmin}/> : (!admin) ? <Dashboard setAuth={setAuth}/> : <AdminPage />}\n                    </Route>\n                    <PrivateRouter auth={auth} setAuth={setAuth} admin={admin} user={user} path=\"/dashboard\" Component={Dashboard} exact/>\n                    <PrivateRouter auth={auth} setAuth={setAuth} admin={admin} user={user} path=\"/garden\" Component={Garden} exact/>\n                    <PrivateRouter auth={auth} setAuth={setAuth} admin={admin} user={user} coins={coins} path=\"/florist\" Component={Florist} exact/>\n                </Switch>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nfunction PrivateRouter({auth, admin, Component, path, location, ...rest}) {\n    return (\n        <>\n            {(auth && !admin) ?\n                    <Route path={path} exact>\n                        <Component auth={auth} {...rest}/>\n                    </Route> :\n                <Redirect to={{pathname: \"/\", state: {from: location}}}/>\n            }\n        </>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nlet initialState = {\n    tasks: [],\n    task: {},\n    dailies: [],\n    coins: Number\n}\n\nexport function taskReducer(state=initialState, action){\n    let taskList = state.tasks\n\n    switch (action.type){\n        case \"GET_TASKS\":\n            return{\n                ...state, tasks: action.payload\n            }\n\n        case \"GET_TASK\":\n            let task = taskList.find(el => el._id === action.payload)\n            return {\n                ...state, tasks: task\n            }\n\n        case \"DELETE_TASK\":\n            let afterDeleteLIst = taskList.filter(el => el._id !== action.payload)\n            return {\n                ...state, tasks: afterDeleteLIst\n            }\n        case \"UPDATE_COINS\":\n            return {\n                ...state, coins: action.payload\n            }\n        case \"SET_DAILIES\":\n            return{\n                ...state, dailies: action.payload\n            }\n        case \"ARCHIVE_DAILY\":\n            let dailiesArr = state.dailies\n            let index = dailiesArr.findIndex(el => el._id === action.payload)\n            dailiesArr[index] = !dailiesArr[index]\n            console.log(\"daily arr hit\")\n            console.log(dailiesArr)\n            return{\n                ...state, dailies: dailiesArr\n            }\n        default:\n            return state\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore, applyMiddleware} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {taskReducer} from \"./store/reducers/task.reducer\";\n\nconst store = createStore(taskReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <App />\n    </Provider>\n\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}